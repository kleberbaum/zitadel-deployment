zitadel:
  masterkey: x123456789012345678901234567891y
  configmapConfig:
    SystemAPIUsers:
      # Add keys for authentication of the systemAPI here:
      # you can specify any name for the user, but they will have to match the `issuer` and `sub` claim in the JWT:
      - superuser:
          #Path: /path/to/superuser/ey.pem  # you can provide the key either by reference with the path
          KeyData: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6ZUtLU1VubUpyZityRllPdkRUNApKNzJ3ZXFuayt3cDZMaThNYXI0RHJaWitlQTRRcS9HVTY5ZjdoaTBxTVJ0SlN4SzVleFRmandLcjRPRTFKMWZTCjJvTmRVclNVZmFTc3d5QmF5Ujk2YXVVQzVLUTRmQVpHalFMRjE4K3d6Q3ZrdlNHcVdtNFkxaXhTWkYxQlhNak8KRWFlbThybEFvdkVBd052bGYxbGlSM2xYcG9LR1F2NVhBRkFxS0hsTjhBNW1FOVlTRjRYSHFzNndRck1pTVI2VApNS1ZKK1hkWjNuaVFSZ29TZ2JtM1NqWVFJRmZYUDdhdHVocUIwamNTM3hzckZoSlhaSXNRQTgzQ2QzVVJYbnh0Ck02OFJPWFFZZ3lYbVJtU3d6dHB6TmpmQWgzbkF2bUhrUnFZWXdSZ3I2U1lNT0tNMEEyVGcxWGwzZ1YrMXY2NFgKb3dJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==     # or you can directly embed it as base64 encoded value
          Memberships:
            # MemberType System allows the user to access all APIs for all instances or organizations
            - MemberType: System
              Roles:
                - "SYSTEM_OWNER"
                # Actually, we don't recommend adding IAM_OWNER and ORG_OWNER to the System membership, as this basically enables god mode for the system user
                - "IAM_OWNER"
                - "ORG_OWNER"
      #       # MemberType IAM and Organization let you restrict access to a specific instance or organization by specifying the AggregateID
      #       - MemberType: IAM
      #         Roles: "IAM_OWNER"
      #         AggregateID: "123456789012345678"
      #       - MemberType: Organization
      #         Roles: "ORG_OWNER"
      #         AggregateID: "123456789012345678"
      # - superuser2:
      #     # If no memberships are specified, the user has a membership of type System with the role "SYSTEM_OWNER"
      #     KeyData: <base64 encoded key>     # or you can directly embed it as base64 encoded value
      # Configure the SystemAPIUsers by environment variable using JSON notation:
      # ZITADEL_SYSTEMAPIUSERS='{"systemuser":{"Path":"/path/to/superuser/key.pem"},"systemuser2":{"KeyData":"<base64 encoded key>"}}'
    SystemDefaults:
      SecretGenerators:
        MachineKeySize: 2048 # ZITADEL_SYSTEMDEFAULTS_SECRETGENERATORS_MACHINEKEYSIZE
        ApplicationKeySize: 2048 # ZITADEL_SYSTEMDEFAULTS_SECRETGENERATORS_APPLICATIONKEYSIZE
      PasswordHasher:
        # Set hasher configuration for user passwords.
        # Passwords previously hashed with a different algorithm
        # or cost are automatically re-hashed using this config,
        # upon password validation or update.
        # Configure the Hasher config by environment variable using JSON notation:
        # ZITADEL_SYSTEMDEFAULTS_PASSWORDHASHER_HASHER='{"Algorithm":"pbkdf2","Rounds":290000,"Hash":"sha256"}'
        Hasher:
          # Supported algorithms: "argon2i", "argon2id", "bcrypt", "scrypt", "pbkdf2"
          # Depending on the algorithm, different configuration options take effect.
          Algorithm: bcrypt
          # Cost takes effect for the algorithms bcrypt and scrypt
          Cost: 14 # ZITADEL_SYSTEMDEFAULTS_PASSWORDHASHER_HASHER_COST
          # Time takes effect for the algorithms argon2i and argon2id
          Time: 3 # ZITADEL_SYSTEMDEFAULTS_PASSWORDHASHER_HASHER_TIME
          # Memory takes effect for the algorithms argon2i and argon2id
          Memory: 32768 # ZITADEL_SYSTEMDEFAULTS_PASSWORDHASHER_HASHER_MEMORY
          # Threads takes effect for the algorithms argon2i and argon2id
          Threads: 4 # ZITADEL_SYSTEMDEFAULTS_PASSWORDHASHER_HASHER_THREADS
          # Rounds takes effect for the algorithm pbkdf2
          Rounds: 290000 # ZITADEL_SYSTEMDEFAULTS_PASSWORDHASHER_HASHER_ROUNDS
          # Hash takes effect for the algorithm pbkdf2
          # Can be "sha1", "sha224", "sha256", "sha384" or "sha512"
          Hash: sha256 # ZITADEL_SYSTEMDEFAULTS_PASSWORDHASHER_HASHER_HASH

        # Verifiers enable the possibility of verifying
        # passwords that are previously hashed using another
        # algorithm then the Hasher.
        # This can be used when migrating from one algorithm to another,
        # or when importing users with hashed passwords.
        # There is no need to enable a Verifier of the same algorithm
        # as the Hasher.
        #
        # The format of the encoded hash strings must comply
        # with https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md
        # https://passlib.readthedocs.io/en/stable/modular_crypt_format.html
        #
        # Supported verifiers: (uncomment to enable)
        Verifiers: # ZITADEL_SYSTEMDEFAULTS_PASSWORDHASHER_VERIFIERS
        #   - "argon2" # verifier for both argon2i and argon2id.
           - "bcrypt"
        #   - "md5"
        #   - "scrypt"
           - "pbkdf2" # verifier for all pbkdf2 hash modes.
      SecretHasher:
        # Set hasher configuration for machine users, API and OIDC client secrets.
        Hasher:
          # Supported algorithms: "argon2i", "argon2id", "bcrypt", "scrypt", "pbkdf2"
          # Depending on the algorithm, different configuration options take effect.
          Algorithm: bcrypt
          # Cost takes effect for the algorithms bcrypt and scrypt
          Cost: 4 # ZITADEL_SYSTEMDEFAULTS_SECRETHASHER_HASHER_COST
          # Time takes effect for the algorithms argon2i and argon2id
          Time: 3 # ZITADEL_SYSTEMDEFAULTS_SECRETHASHER_HASHER_TIME
          # Memory takes effect for the algorithms argon2i and argon2id
          Memory: 32768 # ZITADEL_SYSTEMDEFAULTS_SECRETHASHER_HASHER_MEMORY
          # Threads takes effect for the algorithms argon2i and argon2id
          Threads: 4 # ZITADEL_SYSTEMDEFAULTS_SECRETHASHER_HASHER_THREADS
          # Rounds takes effect for the algorithm pbkdf2
          Rounds: 290000 # ZITADEL_SYSTEMDEFAULTS_SECRETHASHER_HASHER_ROUNDS
          # Hash takes effect for the algorithm pbkdf2
          # Can be "sha1", "sha224", "sha256", "sha384" or "sha512"
          Hash: sha256 # ZITADEL_SYSTEMDEFAULTS_SECRETHASHER_HASHER_HASH
        Verifiers: # ZITADEL_SYSTEMDEFAULTS_SECRETHASHER_VERIFIERS
      Multifactors:
        OTP:
          # If this is empty, the issuer is the requested domain
          # This is helpful in scenarios with multiple ZITADEL environments or virtual instances
          Issuer: "NETSNEK" # ZITADEL_SYSTEMDEFAULTS_MULTIFACTORS_OTP_ISSUER
      DomainVerification:
        VerificationGenerator:
          Length: 32 # ZITADEL_SYSTEMDEFAULTS_DOMAINVERIFICATION_VERIFICATIONGENERATOR_LENGTH
          IncludeLowerLetters: true # ZITADEL_SYSTEMDEFAULTS_DOMAINVERIFICATION_VERIFICATIONGENERATOR_INCLUDELOWERLETTERS
          IncludeUpperLetters: true # ZITADEL_SYSTEMDEFAULTS_DOMAINVERIFICATION_VERIFICATIONGENERATOR_INCLUDEUPPERLETTERS
          IncludeDigits: true # ZITADEL_SYSTEMDEFAULTS_DOMAINVERIFICATION_VERIFICATIONGENERATOR_INCLUDEDIGITS
          IncludeSymbols: false # ZITADEL_SYSTEMDEFAULTS_DOMAINVERIFICATION_VERIFICATIONGENERATOR_INCLUDESYMBOLS
      Notifications:
        FileSystemPath: ".notifications/" # ZITADEL_SYSTEMDEFAULTS_NOTIFICATIONS_FILESYSTEMPATH
      KeyConfig:
        Size: 2048 # ZITADEL_SYSTEMDEFAULTS_KEYCONFIG_SIZE
        CertificateSize: 4096 # ZITADEL_SYSTEMDEFAULTS_KEYCONFIG_CERTIFICATESIZE
        PrivateKeyLifetime: 6h # ZITADEL_SYSTEMDEFAULTS_KEYCONFIG_PRIVATEKEYLIFETIME
        PublicKeyLifetime: 30h # ZITADEL_SYSTEMDEFAULTS_KEYCONFIG_PUBLICKEYLIFETIME
        # 8766h are 1 year
        CertificateLifetime: 8766h # ZITADEL_SYSTEMDEFAULTS_KEYCONFIG_CERTIFICATELIFETIME
    DefaultInstance:
      EmailTemplate:  # ZITADEL_DEFAULTINSTANCE_EMAILTEMPLATE
    ExternalPort: 443
    ExternalSecure: true
    ExternalDomain: accounts.photonq.org
    TLS:
      Enabled: false
    Database:
      Postgres:
        Host: zitadel-db-postgresql
        Port: 5432
        Database: zitadel
        MaxOpenConns: 20
        MaxIdleConns: 10
        MaxConnLifetime: 30m
        MaxConnIdleTime: 5m
        User:
          Username: zitadel
          SSL:
            Mode: verify-full
        Admin:
          Username: postgres
          SSL:
            Mode: verify-full
  secretConfig:
    Database:
      Postgres:
        User:
          Password: xyz
        Admin:
          Password: abc

  dbSslCaCrtSecret: postgres-cert
  dbSslAdminCrtSecret: postgres-cert
  dbSslUserCrtSecret: postgres-unprivileged-cert
